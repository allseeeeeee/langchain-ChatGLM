
from similarities import Similarity
m = Similarity(model_name_or_path="/home/dev/team/text2vec-large-chinese")

# r = m.similarity('如何更换花呗绑定银行卡', '花呗更改绑定银行卡')
# print(f"similarity score: {float(r)}")  # similarity score: 0.855146050453186

sentences = ['省人民医院', '浙江省人民医院', '浙江省人民医院朝晖院区', '浙江省人民医院（朝晖院区）',
             '浙江省人民医院望江山院区', '浙江省人民医院（望江山院区）', '浙江省第二人民医院', '杭州市第二人民医院',
             '安徽省人民医院', '湖南省人民医院', '广东省人民医院', '上海市人民医院', '重庆市人民医院']

queries = ['我要去体检，请问省人民朝晖的地址在哪里？', '省人民朝晖的报告多久出？', '我约了省人民朝晖的体检，现在去还来得及吗？',
           '请问：浙江省人民医院朝晖院区的体检中心在几号楼几层？',
           '请问：省人民朝晖有入职体检吗？', '请问：浙江省人民医院有入职体检吗？用户在浙江省杭州市',
           '请问：浙江省人民医院有入职体检吗？用户预约了浙江省人民医院朝晖院区2023-06-07的健康体检',
           '请问浙江省人民医院周末可以体检吗？用户预约了浙江省人民医院朝晖院区2023-06-07的健康体检',
           "支持报告邮寄吗？用户预约了浙江省人民医院朝晖院区2023-06-07的健康体检",
           '请问浙江省人民医院周末可以体检吗？', '请问：浙江省人民医院有入职体检吗？',
           '请问：省人民医院有入职体检吗？',  '请问：省人民医院有入职体检吗？用户在浙江省杭州市',
           "周末要去哪里玩", "如何更换花呗绑定银行卡"]

for query in queries:
    print(f"\n{query}")
    for sentence in sentences:
        r = m.similarity(query, sentence)
        print(f"{sentence} similarity score: {float(r)}")

# 策略：
# 有相似度高于0.5的匹配，直接采信 TOP 1
# 无相似度高于0.5的匹配，取TOP 5，由用户进一步确认


